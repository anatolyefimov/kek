{"version":3,"sources":["panels/Home/index.js","api/trimAudio.js","panels/NewPodcast/index.js","utils/convertDataURIToBinary.js","panels/EditAudio/index.js","utils/throttle.js","panels/SliderTest/index.js","panels/DoubleSliderTest/index.js","App.js","index.js"],"names":["Home","id","go","centered","icon","className","header","action","size","onClick","data-to","blob","filename","left","right","a","formData","FormData","console","log","append","fetch","method","body","response","reader","getReader","read","result","Blob","value","type","url","window","URL","createObjectURL","trimAudio","NewPodcast","setCurrentSettings","currentSettings","handleAudioUpload","event","file","target","files","arrayBuffer","audioContext","AudioContext","newWaves","decodeAudioData","audioBuffer","i","length","Math","floor","newWave","c","numberOfChannels","getChannelData","push","prevSettings","waves","duration","MMSSfromSeconds","FileReader","onload","audioDurationString","audioName","name","audio","readAsDataURL","fullSeconds","intSeconds","round","minutes","seconds","style","display","padding","imgSrc","src","alt","tabIndex","mode","accept","onChange","width","height","Component","top","placeholder","podcastName","persist","podcastDescription","before","justifyContent","alignItems","asideContent","level","weight","color","marginTop","cursor","controlSize","marginBottom","expandable","description","paddingTop","flexGrow","disabled","convertDataURIToBinary","dataURI","base64Index","indexOf","base64","substring","raw","atob","rawLength","array","Uint8Array","ArrayBuffer","charCodeAt","EditAudio","audioSrc","audioNode","useRef","useState","currenTime","setCurrentTime","play","setPlay","timeUpdate","e","current","currentTime","func","ms","savedArgs","savedThis","isThrottled","wrapper","arguments","this","apply","setTimeout","throttle","useEffect","addEventListener","cutAudio","start","finish","binary","ref","borderRadius","border","margin","position","range","min","max","connect","zIndex","step","backgroundColor","map","wave","pause","App","activePanel","setActivePanel","currentTarget","dataset","to","SliderTest","DoubleSliderTest","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c26119bb.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { \n\tPanel, \n\tPanelHeader, \n\tButton,\n\tPlaceholder \n} from '@vkontakte/vkui';\nimport Icon56AddCircleOutline from '@vkontakte/icons/dist/56/add_circle_outline';\n\nimport './Home.css'\n\nconst Home = ({ id, go }) => (\n\t<Panel id={id} centered>\n\t\t<PanelHeader>Подкасты</PanelHeader>\n\t\t<Placeholder\n\t\t\ticon={ <Icon56AddCircleOutline className='Home__icon'/> }\n\t\t\theader='Добавьте первый подкаст'\n\t\t\taction={\n\t\t\t\t<Button \n\t\t\t\t\tsize='l'\n\t\t\t\t\tonClick={go}\n\t\t\t\t\tdata-to='new-podcast'\n\t\t\t\t>\n\t\t\t\t\tДобавить подкаст\n\t\t\t\t</Button>\n\t\t\t}\n\t\t\tclassName='Home__placeholder'\n\t\t>\n\t\t\tДобавляйте, редактируйте и делитесь подкастами вашего сообщества.\n\t\t</Placeholder>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired\n};\n\nexport default Home;\n","async function trimAudio(blob, filename, left, right) {\n    let formData = new FormData();\n    console.log('trim', blob)\n    formData.append('audio', blob, filename)\n    formData.append('left', left);\n    formData.append('right', right);\n\n    let response = await fetch('/cut_audio', {\n        method: 'POST',\n        body: formData\n      });\n  \n    console.log(response)\n    let reader = response.body.getReader();\n    let result = await reader.read();\n    var blob = new Blob([result.value], { type: 'audio/mp3' });\n    let url = window.URL.createObjectURL(blob)\n    console.log(url);\n    return url\n}\n\nexport default trimAudio;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Panel,\n  PanelHeader,\n  PanelHeaderBack,\n  FormLayout,\n  Placeholder,\n  Div,\n  File,\n  Input,\n  Separator,\n  Checkbox,\n  Button,\n  Cell,\n  Textarea,\n  Caption,\n  Card\n} from '@vkontakte/vkui';\n\nimport Icon56GalleryOutline from '@vkontakte/icons/dist/56/gallery_outline';\nimport './NewPodcast.css'\nimport { Icon28PodcastOutline } from \"@vkontakte/icons\";\n\nimport trimAudio from 'api/trimAudio';\n\n\nconst NewPodcast = ({id, go, setCurrentSettings, currentSettings}) => {\n\n  const handleImageChange = event => {\n    const reader = new FileReader();\n    reader.onload = () => reader.result;\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  const handleImageDelete = () => {\n    setCurrentSettings(prevSettings => ({\n        ...prevSettings,\n        imgSrc: null\n    }))\n  }\n\n  const handleAudioUpload = async (event) => {\n    const file = event.target.files[0];\n    console.log(file)\n\n    const arrayBuffer = await file.arrayBuffer();\n    const audioContext = new AudioContext();\n    let newWaves = [];\n    const audioBuffer = await audioContext.decodeAudioData(arrayBuffer);\n    for (let i = 0; i < audioBuffer.length; i += Math.floor(audioBuffer.length / 100)) {\n        let newWave = 0;\n        for (let c = 0; c < audioBuffer.numberOfChannels; ++c) {\n            newWave += audioBuffer.getChannelData(c)[i]\n        }\n        newWave /= audioBuffer.numberOfChannels;\n        newWave += 1;\n        newWave /= 2;\n\n        newWaves.push(newWave);\n    }\n    setCurrentSettings(prevSettings => ({...prevSettings, waves: newWaves}));\n\n    const duration = MMSSfromSeconds(audioBuffer.duration)\n    let reader = new FileReader();\n    reader.onload = (event) => {\n        \n        setCurrentSettings(prevSettings =>({\n            ...prevSettings,\n            audioDurationString: duration,\n            audioName: file.name,\n            audio: reader.result\n        }))\n    }\n    reader.readAsDataURL(file);\n    console.log(file);\n    \n  }\n\n\n  const MMSSfromSeconds = (fullSeconds) => {\n    const intSeconds = Math.round(fullSeconds)\n    const minutes = Math.round(intSeconds / 60)\n    const seconds = intSeconds % 60\n    return `${minutes > 9 ? minutes : `0${minutes}`}:${seconds > 9 ? seconds : `0${seconds}`}`\n  }\n\n  return (\n    <Panel id={id} className='NewPodcast'>\n      <PanelHeader left={<PanelHeaderBack onClick={go} data-to='home'/>}>\n        Новый подкаст\n      </PanelHeader>\n      <FormLayout>\n        <Div style={{\n          display: 'flex',\n          padding: 0\n        }}>\n          <Div className='NewPodcast__imageOverlay'>\n            {!currentSettings.imgSrc ? <File\n                tabIndex={0}\n                mode='overlay_primary'\n                className='cover-input'\n                accept=\"image/*\"\n                onChange={handleImageChange}\n              >\n                <Icon56GalleryOutline\n                  className='cover-input__icon'\n                  width={32}\n                  height={32}\n                />\n              </File>\n              :\n              <img className='NewPodcast__image'\n                   src={currentSettings.imgSrc}\n                   alt='Обложкаф'\n                   onClick={handleImageDelete}\n              />\n            }\n          </Div>\n          <Div className='NewPodcast__TopForm'>\n            <FormLayout Component='div'>\n              <Input\n                top='Название'\n                placeholder='Введите название подкаста'\n                className='NewPodcast__name'\n                value={currentSettings.podcastName}\n                onChange={(event) => {\n                    event.persist()\n                    setCurrentSettings(prevSettings => ({\n                    ...prevSettings,\n                    podcastName: event.target.value\n                }))}}\n              />\n            </FormLayout>\n          </Div>\n\n        </Div>\n      </FormLayout>\n      <FormLayout>\n        <Textarea value={currentSettings.podcastDescription} onChange={(event) => { event.persist(); setCurrentSettings( prevSettings => ({\n                ...prevSettings,\n                podcastDescription: event.target.value\n            })\n            )}}\n                  top=\"Описание подкаста\"/>\n      </FormLayout>\n\n      {\n        !currentSettings.audio ? <Placeholder\n            header=\"Загрузите Ваш подкаст\"\n            className=\"NewPodcast__placeholder\"\n            action={<File style={{cursor: 'pointer'}} tabIndex={0} accept='audio/*' onChange={handleAudioUpload}\n                          mode=\"outline\" controlSize={'l'}>Загрузить\n              файл</File>}\n          >\n            Выберите готовый аудиофайл из вашего телефона и добавьте его\n          </Placeholder> :\n          <Div>\n            <Cell className='NewPodcast__audioInfo' before={\n              <Card style={{\n                width: '48px',\n                height: '48px',\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}>\n                <Icon28PodcastOutline/>\n              </Card>}\n                  asideContent={currentSettings.audioDurationString}>{currentSettings.audioName}</Cell>\n            <Caption level='1' className='' weight=\"regular\" style={{color: '#818C99', marginTop: '10px'}}>Вы можете\n              добавить\n              таймкоды и скорректировать подкаст в режиме редактирования</Caption>\n\n            <Button size={'xl'} mode={'outline'} style={{marginTop: '18px'}} onClick={go} data-to='edit-audio'>Редактировать аудиозапись</Button>\n          </Div>\n      }\n\n      <Separator style={{marginBottom: '2px', marginTop: '10px'}}/>\n      <FormLayout className=\"NewPodcast__checkboxes\">\n        <Checkbox tabIndex={0} className=\"NewPodcast__checkbox\">Ненормативный контент</Checkbox>\n        <Checkbox tabIndex={0} className=\"NewPodcast__checkbox\">Исключить эпизод из экспорта</Checkbox>\n        <Checkbox tabIndex={0} className=\"NewPodcast__checkbox\">Трейлер подкаста</Checkbox>\n\n      </FormLayout>\n\n\n      <Cell className='NewPodcast__privacyCell' expandable size={'l'} description={'Всем пользователям'}>\n        Кому доступен данный подкаст\n      </Cell>\n      <Div style={{paddingTop: 0}}>\n        <Caption level='1' weight=\"regular\" style={{color: '#818C99'}}>При публикации записи с\n          эпизодом, он\n          становится доступным для всех пользователей</Caption>\n      </Div>\n      <Div style={{flexGrow: 1, padding: 0}}></Div>\n      <Div>\n        <Button disabled={!currentSettings.imgSrc || !currentSettings.podcastName || !currentSettings.podcastDescription || !currentSettings.audio} \n                size=\"xl\"\n                mode=\"primary\">Далее</Button>\n      </Div>\n    </Panel>\n  )\n}\n\nNewPodcast.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\n\nexport default NewPodcast;\n","\nvar BASE64_MARKER = ';base64,';\n\nfunction convertDataURIToBinary(dataURI) {\n  var base64Index = dataURI.indexOf(BASE64_MARKER) + BASE64_MARKER.length;\n  var base64 = dataURI.substring(base64Index);\n  var raw = window.atob(base64);\n  var rawLength = raw.length;\n  var array = new Uint8Array(new ArrayBuffer(rawLength));\n\n  for(let i = 0; i < rawLength; i++) {\n    array[i] = raw.charCodeAt(i);\n  }\n  return array;\n}\n\n\nexport default convertDataURIToBinary;","import React, { useRef, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nimport { \n\tPanel, \n    PanelHeader, \n    Div,\n    Button\n} from '@vkontakte/vkui';\n\nimport Icon24Play from '@vkontakte/icons/dist/24/play';\nimport Icon24Pause from '@vkontakte/icons/dist/24/pause';\n\nimport throttle from 'utils/throttle';\nimport convertDataURIToBinary from 'utils/convertDataURIToBinary'\nimport trimAudio from 'api/trimAudio' \n\n\nimport './EditAudio.css';\n\nconst EditAudio = ({ id, audioSrc, waves }) => {\n    const audioNode = useRef();\n    const progressBar = useRef();\n    const [currenTime, setCurrentTime] = useState(0);\n    const [play, setPlay] = useState(false);\n    const [audiofile, setAudiofile] = useState();\n    // let audioCtx = new (window.AudioContext || window.webkitAudioContext)();\n    // let source = audioCtx.createBufferSource();\n\n    let timeUpdate = (e) => {\n        console.log(audioNode.current.duration )\n        setCurrentTime(e.target.currentTime / audioNode.current.duration * 100);\n    }\n\n    \n\n    timeUpdate = throttle(timeUpdate, 100000)\n    useEffect(() => {\n        audioNode.current.addEventListener('timeupdate', timeUpdate)\n    })\n\n    const onRangeChange = (event) => {\n        console.log(audioNode.current.duration)\n        audioNode.current.currentTime = audioNode.current.duration * event.target.value / 100;\n\n        setCurrentTime(event.target.value)\n    }\n\n    const cutAudio = async (start, finish) => {\n        let binary = convertDataURIToBinary(audioNode.current.src);\n        var blob=new Blob([binary], {type : 'audio/mp3'});\n        audioNode.current.src = await trimAudio(blob, 'audio.mp3', 5, 10)\n        \n    }\n\n    const handlePlay = () => {\n        if (play) {\n            audioNode.current.pause();\n        } else {\n            audioNode.current.play();\n        }\n\n        setPlay(!play)\n        \n    }\n\n    return (\n        <Panel id={id}>\n            <PanelHeader>Редактирование</PanelHeader>\n            <audio ref={audioNode} id='audio' src={audioSrc}>\n\n                Your browser does not support the audio element.\n            </audio>\n            <div style={{\n                borderRadius: '10px',\n                border: '0.5px solid rgba(0, 0, 0, 0.12)',\n                margin: '0 12px',\n                position: 'relative'\n            }}>\n                <Nouislider className={'double-slider'} range={{ min: 0, max: 100 }} start={[20, 80]} connect />\n                <input \n                    className='slider_play' \n                    type={'range'} \n                    style={{\n                        position: 'absolute',\n                        top: -70,\n                        left: 0,\n                        zIndex: 100\n                    }}\n                    step='0.1'\n                    value={currenTime}\n                    onChange={onRangeChange}\n                />\n                <Div style={{\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'space-between',\n                    height: 96,\n                    backgroundColor: '#F2F3F5',\n                    position: 'relative',\n                    borderRadius: '10px 10px 0 0',\n                    \n                }}>\n                                \n                    {\n                        waves.map((wave) => (\n                            <div style={{\n                                height: wave  < 0.5 ? 40*wave*0.5 : 40*wave,\n                                width: 2,\n                                borderRadius: '2px',\n                                backgroundColor: '#3F8AE0',\n                                \n                            }}>\n\n                            </div>\n                        ))\n                    }\n                </Div>\n                <div className='toolbar'>\n                    <Button\n                        className='toolbar__button'\n                        onClick={handlePlay}\n                    >\n                        {play ? <Icon24Pause /> : <Icon24Play />}\n                    </Button>\n                    <Button\n                        className='toolbar__button'\n                        onClick={cutAudio}\n                    >\n\n                    </Button>\n                </div>\n                    \n            </div> \n\n        </Panel>\n    )\n}\n\n\nEditAudio.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default EditAudio;","export default function throttle(func, ms) {\n\n    let isThrottled = false,\n      savedArgs,\n      savedThis;\n  \n    function wrapper() {\n  \n      if (isThrottled) { // (2)\n        savedArgs = arguments;\n        savedThis = this;\n        return;\n      }\n  \n      func.apply(this, arguments); // (1)\n  \n      isThrottled = true;\n  \n      setTimeout(function() {\n        isThrottled = false; // (3)\n        if (savedArgs) {\n          wrapper.apply(savedThis, savedArgs);\n          savedArgs = savedThis = null;\n        }\n      }, ms);\n    }\n  \n    return wrapper;\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Panel,\n  PanelHeader,\n  RangeSlider\n} from '@vkontakte/vkui';\n\nimport './style.css'\n\nconst Home = ({ id, go }) => (\n  <Panel id={id} centered>\n    <PanelHeader>Редактирование</PanelHeader>\n    <input className='slider_play' type={'range'}/>\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Nouislider from \"nouislider-react\";\nimport \"nouislider/distribute/nouislider.css\";\n\nimport {\n  Panel,\n  PanelHeader,\n  RangeSlider\n} from '@vkontakte/vkui';\n\nimport './style.css'\n\nconst Home = ({ id, go }) => (\n  <Panel id={id} centered>\n    <PanelHeader>Редактирование</PanelHeader>\n    <img style={{position: 'absolute', width: '100%'}} src={'https://upload.wikimedia.org/wikipedia/commons/thumb/4/4b/La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg/1200px-La_Tour_Eiffel_vue_de_la_Tour_Saint-Jacques%2C_Paris_ao%C3%BBt_2014_%282%29.jpg'}/>\n    <Nouislider className={'double-slider'} range={{ min: 0, max: 100 }} start={[20, 80]} connect />\n  </Panel>\n);\n\nHome.propTypes = {\n  id: PropTypes.string.isRequired,\n  go: PropTypes.func.isRequired\n};\n\nexport default Home;\n","import React, { useState} from 'react';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from 'panels/Home';\nimport NewPodcast from 'panels/NewPodcast'\nimport EditAudio from './panels/EditAudio';\nimport SliderTest from './panels/SliderTest'\nimport DoubleSliderTest from './panels/DoubleSliderTest'\n\nconst App = () => {\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [currentSettings, setCurrentSettings] = useState({\n\t\taudioName: 'Михаил Круг.mp3',\n\t\taudioDurationString: '59:41',\n\t});\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<View activePanel={activePanel} >\n\t\t\t<Home id='home' go={go}/>\n\t\t\t<NewPodcast \n\t\t\t\tid='new-podcast' \n\t\t\t\tgo={go} \n\t\t\t\tcurrentSettings={currentSettings}\n\t\t\t\tsetCurrentSettings={setCurrentSettings}\n\t\t\t/>\n\t\t\t<EditAudio id='edit-audio' audioSrc={currentSettings.audio} waves={currentSettings.waves}/>\n\t\t\t<SliderTest id='slider-test' go={go}/>\n\t\t\t<DoubleSliderTest id='double-slider-test' go={go}/>\n\t\t</View>\n\t);\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}